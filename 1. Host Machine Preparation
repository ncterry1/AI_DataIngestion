1. Host Machine Preparation
Before spinning up any virtual machine, ensure your laptop can handle the load. Think of this as making sure your car has enough fuel, correct tires, and working brakes before a long drive.

1.1. Verify Hardware & Software Requirements
RAM (Memory)

Minimum: 16 GB of RAM.

Recommended: 24 GB or more, especially if you plan to run CPU-based LLM inference (which can consume significant memory) alongside Docker/Neo4j.

Why?
‒ Ubuntu alone can consume ~1–2 GB.
‒ Neo4j (in Docker) can reserve 2–4 GB for heap + page cache.
‒ A 7 B-parameter LLaMA model on CPU may use ~12–14 GB.
‒ VS Code, other background processes, and buffer for OS: ~2–4 GB.
Total can approach or exceed 16 GB if everything runs simultaneously.

CPU and Virtualization

Requirement: A CPU with virtualization extensions (Intel VT-x or AMD-V).

How to Check:

On Windows host: Open Task Manager → Performance → CPU. Look for “Virtualization: Enabled.”

On Linux host:

bash
Copy
Edit
egrep -c '(vmx|svm)' /proc/cpuinfo
If the result is ≥ 1, your CPU supports VT-x or AMD-V.

What Happens If Off?
Virtualization disabled in BIOS/UEFI → VM cannot start. You’ll get an error like “VT-x is disabled in the BIOS.”

Disk Space

Minimum Free Space: 200 GB.

Why?
‒ Ubuntu VM’s thin-provisioned virtual disk: up to 100 GB (but initially takes only what’s used).
‒ Docker images (Neo4j can be ~1 GB), container data, and cached LLM weights (~10–20 GB) in ~/.cache/huggingface.
‒ Snapshots: Taking snapshots of a 100 GB VM can double disk usage temporarily.
Total reserves ~200 GB to avoid “disk full” issues.

VMware Workstation Pro (or Fusion Pro)

Install/Update: If not installed, download and install the latest VMware Workstation Pro (Windows/Linux) or VMware Fusion Pro (macOS).

Why VMware Pro?
‒ Supports advanced features like snapshots, easy hardware customization, and (on some systems) limited GPU passthrough.

Check for Updates:
In VMware: Help → Software Updates, then install any available patches.

Create a Host Directory for VMs

Path Example:

Windows: C:\VMs\AI_Lab

macOS/Linux: /Users/youruser/VMs/AI_Lab or /home/youruser/VMs/AI_Lab

Why?
‒ Keeps all virtual machine files (disks, config) in one place.
‒ Facilitates backups and snapshots.
‒ Prevents scattering .vmdk, .vmx files across your host’s user folder.

Decide on Network Mode

Use NAT (Network Address Translation).
‒ VM obtains a private IP (commonly 192.168.x.x) from VMware’s DHCP.
‒ Outbound internet is routed through the host’s IP.
‒ Ports forwarded from VM to host need explicit mapping (e.g., Docker’s port 7474 on VM → port 7474 on host).

Why NAT?
‒ Isolates the VM from your local LAN. A service running on VM (Neo4j) is reachable only if you map ports or use SSH forward.
‒ Simplifies network setup—no need to manage IP conflicts on the LAN.

Alternative: Bridged networking. VM becomes a peer on your LAN (gets an IP from your router). Useful if you want other devices on your network to reach your VM by IP, but this can expose open ports to the LAN by default.

